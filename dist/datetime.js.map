{"version":3,"file":"datetime.js","sources":["../src/cfns.js","../src/datetime.js"],"sourcesContent":["\r\n// 是 HTMLElement 节点\r\nexport function isElement(tar) {\r\n  return tar instanceof HTMLElement\r\n}\r\n\r\nexport function isNode(tar) {\r\n  return tar instanceof Node\r\n}\r\n\r\n// 获取指定目标的数据类型\r\nexport function type(tar) {\r\n  return Object.prototype.toString.call(tar).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()\r\n}\r\n\r\n// 兼容出来 String.prototype.padStart\r\nexport function padStart(tar, length, padString = '') {\r\n  tar = `${tar}`\r\n  if (''.padStart) {\r\n    return tar.padStart(length, padString)\r\n  }\r\n  return tar.length > length ? tar : `${Array(length).join(padString)}${tar}`.slice(-length)\r\n} ","import { type, padStart } from './cfns.js'\r\n\r\n\r\n// 将毫秒转 Date 对象\r\nfunction millisecondsToDate(milliseconds, isTimestamp) {\r\n  if (isTimestamp && `${milliseconds}`.split('.')[0].length < 11) {\r\n    milliseconds = Math.round(milliseconds * 1000)\r\n  }\r\n  return new Date(milliseconds)\r\n}\r\n\r\n\r\n/**\r\n * @param {Date|Timestamp|Milliseconds} target - 需要被格式化的时间对象/时间戳/毫秒\r\n * @param {String|Array|Object|Boolean} response - template（时间格式化模板） 或 [template, ...] 或 { name: template, ... } 或 true/false。当为 true/false 时，返回 template 占位符为键名的对象。\r\n *  template 占位符\r\n *    $Y：两位年。例如：18、19、20\r\n * \t  $y：四位年。例如：2020\r\n *    $M：1 ~ 12 月 的英文缩写\r\n *    $m：1 ~ 12 月\r\n *    $w：星期一 到 星期日 的英文缩写\r\n *    $d：1 ~ 31 天\r\n *    $H：24 小时\r\n *    $h：12 小时\r\n *    $i：60 分钟\r\n *    $s：60 秒\r\n *    $u：0 ~ 999 毫秒\r\n * @param {Boolean} isTimestamp - 需要被格式化的对象是否为时间戳。设置 true 时，如果 target 字符长度小于等于 10，target 将被乘以 1000\r\n */\r\nexport function format(target, response, isTimestamp = false) {\r\n  let date\r\n  switch(type(target)) {\r\n    case 'date':\r\n      date = target\r\n      break\r\n    case 'string':\r\n      target = parseInt(target)\r\n      isNaN(target) && format.targetError()\r\n      date = millisecondsToDate(target, isTimestamp)\r\n      break\r\n    case 'number':\r\n      date = millisecondsToDate(target, isTimestamp)\r\n      break\r\n    default:\r\n      format.targetError()\r\n  }\r\n  let [ w, M, d, y, His ] = date.toString().split(' ')\r\n  let [ H, i, s ] = His.split(':')\r\n  let Y = y.slice(2)\r\n  let m = padStart(date.getMonth() + 1, 2, 0)\r\n  let u = padStart(date.getMilliseconds(), 3, 0)\r\n  let h = padStart(H > 12 ? H - 12 : H, 2, 0)\r\n  i = padStart(i, 2, 0)\r\n  s = padStart(s, 2, 0)\r\n  \r\n  let baseData = { $y: y, $Y: Y, $m: m, $M: M, $d: d, $h: h, $H: H, $i: i, $s: s, $u: u, $w: w }\r\n    \r\n  switch(type(response)) {\r\n    // 模板字符串\r\n    case 'string':\r\n      return format.replaceTemplate(response, baseData)\r\n    // 由模板字符串组成的数组\r\n    case 'array':\r\n      return response.map(template => format.replaceTemplate(template, baseData))\r\n    // 由模板字符串组成的对象\r\n    case 'object': {\r\n      let temp = {}\r\n      for(let [k, v] of Object.entries(response)) {\r\n        temp[k] = format.replaceTemplate(v, baseData)\r\n      }\r\n      return temp\r\n    }\r\n    // 直接返回切割后的数据\r\n    case 'boolean':\r\n      return baseData\r\n    // 无效的类型\r\n    default:\r\n      format.templateError()\r\n  }\r\n}\r\n\r\n// 模板替换\r\nformat.replaceTemplate = function (template, baseData) {\r\n  if (type(template) != 'string') {\r\n    format.templateError()\r\n  }\r\n  return template\r\n    .replace(/\\$y/g, baseData.$y)\r\n    .replace(/\\$Y/g, baseData.$Y)\r\n    .replace(/\\$m/g, baseData.$m)\r\n    .replace(/\\$d/g, baseData.$d)\r\n    .replace(/\\$h/g, baseData.$h)\r\n    .replace(/\\$H/g, baseData.$H)\r\n    .replace(/\\$i/g, baseData.$i)\r\n    .replace(/\\$s/g, baseData.$s)\r\n    .replace(/\\$u/g, baseData.$u)\r\n    .replace(/\\$w/g, baseData.$w)\r\n    .replace(/\\$M/g, baseData.$M)\r\n}\r\n\r\n// 时间格式化模板错误处理\r\nformat.templateError = function () {\r\n  throw new TypeError('无效的时间格式化模板')\r\n}\r\n\r\n// 被格式化的时间的错误处理\r\nformat.targetError = function () {\r\n  throw new TypeError('无效的target')\r\n}"],"names":["type","tar","Object","prototype","toString","call","match","toLowerCase","padStart","length","padString","Array","join","slice","millisecondsToDate","milliseconds","isTimestamp","split","Math","round","Date","format","target","response","date","parseInt","isNaN","targetError","w","M","d","y","His","H","i","s","Y","m","getMonth","u","getMilliseconds","h","baseData","$y","$Y","$m","$M","$d","$h","$H","$i","$s","$u","$w","replaceTemplate","map","template","temp","k","v","entries","templateError","replace","TypeError"],"mappings":"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"}