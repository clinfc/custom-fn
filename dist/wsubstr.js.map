{"version":3,"file":"wsubstr.js","sources":["../src/wsubstr.js"],"sourcesContent":["/**\r\n * 指定宽度（PX），样式切割字符串 \r\n */\r\n\r\n// 创建字符计算容器\r\nfunction createNode(str, css) {\r\n  let span = document.createElement('span')\r\n  let options = {\r\n    opacity: 0,\r\n    zIndex: -100,\r\n    width: 0,\r\n    display: 'inline-block',\r\n    whiteSpace: 'nowrap',\r\n  }\r\n  if (typeof css === 'object') {\r\n    Object.assign(options, css)\r\n  }\r\n  for (let [k, v] of Object.entries(options)) {\r\n    span.style[k] = v\r\n  }\r\n  let text = document.createTextNode(str)\r\n  span.appendChild(text)\r\n  document.body.appendChild(span)\r\n  \r\n  return {\r\n    span,\r\n    text\r\n  }\r\n}\r\n\r\n// 获取基础数据\r\nfunction basicData(span, str, maxWidth) {\r\n  let width = span.scrollWidth    // 字符串的总宽\r\n  let average = width / str.length // 单个字符的平均宽度\r\n  let size = Math.ceil(maxWidth / average) - 1  // maxWidth 宽度的字符串大概有多少个字符，由于平均字符宽度肯定比实际宽度小，所以最少需要减一\r\n  \r\n  return { width, average, size }\r\n}\r\n\r\n// 比较两个浮点数是否相等\r\nfunction equal(f1, f2) {\r\n  return Math.abs(f1 - f2) < Number.EPSILON\r\n}\r\n\r\n\r\n// 计算当前字符串的宽度是否达标\r\nfunction computed(span, text, childStr, maxWidth, average) {\r\n  text.textContent = childStr\r\n  let w = span.scrollWidth\r\n  if (w < maxWidth || equal(w, maxWidth)) { // 字符穿宽度 <= maxWidth\r\n    let d = maxWidth - w\r\n    if (d < average) {  // 当前字符串宽度与最大宽度误差在一个平均字符宽度以内\r\n      return {\r\n        done: true,\r\n        diff: 0\r\n      }\r\n    } else {  // 当前字符串宽度与最大宽度误差超过一个字符\r\n      return {\r\n        done: false,\r\n        diff: -Math.floor(d / average)  // 少了多少个字符\r\n      }\r\n    }\r\n  } else { // 字符穿宽度 > maxWidth\r\n    return {\r\n      done: false,\r\n      diff: Math.ceil((w - maxWidth) / average) // 多了多少个字符\r\n    }\r\n  }\r\n}\r\n\r\n// 切割字符串\r\nfunction split(span, text, str, start, end, maxWidth, average) {\r\n  let childStr = str.slice(start, end)\r\n  let { done, diff } = computed(span, text, childStr, maxWidth, average)\r\n  if (done) {\r\n    return childStr\r\n  } else {\r\n    if (diff > 0) {\r\n      childStr = str.slice(start, end - diff)\r\n      let o = computed(span, text, childStr, maxWidth, average)\r\n      if (o.done) {\r\n        return childStr\r\n      } else if (o.diff == -diff) {\r\n        --end // 字符平均值比实际值小的概率非常大，所以 diff 是否为 1，end 都要减一\r\n        diff > 1 && (end -= diff)\r\n        return str.slice(start, end)\r\n      }\r\n      return split(span, text, str, start, end - diff - o.diff, maxWidth, average)\r\n    }\r\n    return split(span, text, str, start, end - diff, maxWidth, average)\r\n  }\r\n}\r\n\r\n/**\r\n * 根据条件将字符串分割为子串，返回数组\r\n * \r\n * @param {String} str - 需要被切割的字符串\r\n * @param {Number} maxWidth - 被切割成的子串最大宽度（px）\r\n * @param {Object|undefined} css - 设置字体的样式及其它相关属性\r\n * @return {Array}\r\n */\r\nexport default function wsubstr(str, maxWidth, css = undefined) {\r\n  let temp = []   // 缓存切割后的字符串\r\n  let { span, text } = createNode(str, css) // 生成计算字符宽高的容器\r\n  let { average, size } = basicData(span, str, maxWidth) // 获取基础数据\r\n  \r\n  let start = 0, end = size  // 切割字符时的 开始/结束 索引\r\n  \r\n  while(start < str.length) {\r\n    if (str.length - start < size) { // 最后一次截取\r\n      temp.push(str.slice(start, end))\r\n      break\r\n    } else {\r\n      let childStr = split(span, text, str, start, end, maxWidth, average)\r\n      temp.push(childStr)\r\n      start += childStr.length\r\n      end = start + size\r\n    }\r\n  }\r\n  \r\n  document.body.removeChild(span)\r\n  \r\n  return temp\r\n}"],"names":["createNode","str","css","span","document","createElement","options","opacity","zIndex","width","display","whiteSpace","Object","assign","k","v","entries","style","text","createTextNode","appendChild","body","basicData","maxWidth","scrollWidth","average","length","size","Math","ceil","equal","f1","f2","abs","Number","EPSILON","computed","childStr","textContent","w","d","done","diff","floor","split","start","end","slice","o","wsubstr","undefined","temp","push","removeChild"],"mappings":"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"}